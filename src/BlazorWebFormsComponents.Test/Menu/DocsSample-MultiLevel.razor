@inherits TestComponentBase

<Fixture Test="FirstTest">

	<ComponentUnderTest>

<Menu id="NavigationMenu"
      DisappearAfter="2000"
      StaticDisplayLevels="2"
      StaticSubmenuIndent="10"
      orientation="Vertical"
      font-names="Arial"
      target="_blank"
      runat="server">

    <StaticMenuItemStyle BackColor="@("LightSteelBlue")"
                         ForeColor="@("Black")" />
    <StaticHoverStyle BackColor="WebColor.LightSkyBlue" />
    <DynamicMenuItemStyle BackColor="WebColor.Black"
                          ForeColor="WebColor.Silver" />
    <DynamicHoverStyle BackColor="WebColor.LightSkyBlue"
                       ForeColor="WebColor.Black" />


    <Items>
        <MenuItem navigateurl="Home.aspx"
                  text="Home"
                  tooltip="Home">
            <MenuItem navigateurl="Music.aspx" text="Music" tooltip="Music">
                <MenuItem navigateurl="Classical.aspx"
                          text="Classical"
                          tooltip="Classical" />
                <MenuItem navigateurl="Rock.aspx"
                          text="Rock"
                          tooltip="Rock" />
                <MenuItem navigateurl="Jazz.aspx"
                          text="Jazz"
                          tooltip="Jazz" />
            </MenuItem>
            <MenuItem navigateurl="Movies.aspx" text="Movies" tooltip="Movies">
                <MenuItem navigateurl="Action.aspx"
                          text="Action"
                          tooltip="Action" />
                <MenuItem navigateurl="Drama.aspx"
                          text="Drama"
                          tooltip="Drama" />
                <MenuItem navigateurl="Musical.aspx"
                          text="Musical"
                          tooltip="Musical" />
            </MenuItem>
        </MenuItem>
    </Items>

		</Menu>

	</ComponentUnderTest>

</Fixture>

@code {

	void FirstTest(Fixture fixture) {

		using var ctx = new TestContext();
		var jsMock = ctx.Services.AddMockJSRuntime(JSRuntimeMockMode.Strict);

		var cut = fixture.GetComponentUnderTest();

		jsMock.VerifyInvoke("bwfc.Page.AddScriptElement", calledTimes: 1);

		var menuItems =	cut.FindAll("a");
		menuItems.Count().ShouldBe(9);

		cut.FindAll("a.level1").Count().ShouldBe(1);
		cut.FindAll("a.level2").Count().ShouldBe(2);
		cut.FindAll("a.level3").Count().ShouldBe(6);

	}

}
